version: '3'

services:
  traefik:
      image: traefik:v2.5
      command:
          - "--api.insecure=true"
          - "--providers.docker=true"
          - "--providers.docker.exposedbydefault=false"
      ports:
          - "9999:80"
          - "8080:8080"
      volumes:
          - /var/run/docker.sock:/var/run/docker.sock
      deploy:
        resources:
          limits:
            cpus: "0.1"
            memory: "50MB"          

  postgres:
    container_name: mydb
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          cpus: "0.6"
          memory: "300MB"      

  api01: &api
      build:
          context: .
      environment:
          POSTGRES_USER: ${POSTGRES_USER}
          POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
          POSTGRES_DATABASE: ${POSTGRES_DATABASE}            
          POSTGRES_HOST: mydb   
          DIRECTORY_SCRIPT: script.sql     
      links:
          - "postgres"
      depends_on:
          - postgres    
      labels:
          - "traefik.enable=true"
          - "traefik.http.routers.node_app.rule=PathPrefix(`/`)"
          - "traefik.http.services.node_app.loadbalancer.server.port=3000"        
      deploy:
        resources:
          limits:
            cpus: "0.2"
            memory: "100MB"                    
  api02:
    <<: *api 
 